"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
#BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(__file__))


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8vhs#pkzuw_wcnvf-_hemi@!vscl)&tqxlfx373v^o@vzp=x^1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#Agregado de / autom√°tico
APPEND_SLASH = False


CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOWED_ORIGINS = [
#     'http://localhost:8080',
#     'http://10.0.2.15:8080',
#     'http://192.168.0.24:8080'
# ]

#CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SECURE = False
#CSRF_COOKIE_SAMESITE = 'None'
#CSRF_TRUSTED_ORIGINS = ['http://localhost:8000','https://*.127.0.0.1']

#SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False
#SESSION_COOKIE_SAMESITE = 'None'

# Application definition

BASE_APPS = [
    ## Django default apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites', #added
]

LOCAL_APPS = [
    'apps.users',
    'apps.administracion',
    'apps.alumnos',
    'apps.docentes',
    'apps.base',
]

THIRD_APPS = [
    'rest_framework',
    'rest_framework.authtoken',
    #'rest_auth',
    #'rest_auth.registration',
    'dj_rest_auth',
    'dj_rest_auth.registration',
    'corsheaders',
    'django_countries',
    'simple_history',
    'drf_yasg',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]

INSTALLED_APPS = BASE_APPS + LOCAL_APPS + THIRD_APPS

SITE_ID = 1
EMAIL_BACKEND = 'django.core.email.backends.console.EmailBackend'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        #'rest_framework.authentication.SessionAuthentication',
    ]
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', #added
    'django.middleware.common.CommonMiddleware', #added
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware', HABILITAR DE NUEVO
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware', #added
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        #'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#         'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': os.environ.get('POSTGRES_DB', default='postgres2'),
#         'USER': os.environ.get('POSTGRES_USER', default='postgres'),
#         'PASSWORD': os.environ.get('POSTGRES_PASSWORD', default='postgres'),
#         'HOST': os.environ.get('POSTGRES_HOST', default='localhost'),
#         'PORT': "5432"
#         }
# }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 7,
        }
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'es-AR'

TIME_ZONE = 'America/Argentina/Ushuaia'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# User substitution
# https://docs.djangoproject.com/en/1.11/topics/auth/customizing/#auth-custom-user

AUTH_USER_MODEL = 'users.User'

## added
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

SWAGGER_SETTINGS = {
    'DOC_EXPANSION': 'none'
}

ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
#ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

REST_AUTH_SERIALIZERS = {
    'TOKEN_SERIALIZER': 'apps.users.api.serializers.general_serializers.TokenSerializer',
    }

#if email verification is active
#ACCOUNT_CONFIRM_EMAIL_ON_GET = True
#LOGIN_URL = 'http://localhost:8000/users/login'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_USE_TLS = True
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = 'email@gmail.com'
# EMAIL_HOST_PASSWORD = ********
# EMAIL_PORT = 587

#put AR first in nationality list
COUNTRIES_FIRST_SORT = True
COUNTRIES_FIRST = {'AR', 'CL', 'BR'}
